{"version":3,"sources":["logo.svg","components/pages/onboarding/selectstore.component.js","components/pages/onboarding/storecredentials.component.js","components/pages/onboarding/storesuccess.component.js","components/common/stepper/stepperchild.component.js","components/common/stepper/stepper.component.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","SelectStoreComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","passState","storesList","jsonData","console","log","handleSearchedStoreChange","bind","assertThisInitialized","item","index","_this2","onboardingRecordID","setState","selectedStoreIndex","indexOf","selectedStoreName","storeName","setTimeout","updateParentState","searchedStore","storePass","productList","productListExist","passHandleNext","event","target","value","_this3","filteredStoreList","filter","toLowerCase","includes","react_default","a","createElement","className","type","placeholder","onChange","map","onClick","e","displayCredentialScreen","key","Component","StoreCredentialsComponent","handleStoreNameChange","handleStorePassChange","handleProductListChange","handleProductListExistChange","handleSubmit","goToFirstScreen","preventDefault","passHandleBack","onSubmit","name","StoreSuccessComponent","StepperChild","axios","get","then","res","data","_id","post","concat","step","handleNext","handleBack","selectstore_component_SelectStoreComponent","storecredentials_component_StoreCredentialsComponent","storesuccess_component_StoreSuccessComponent","getStepContent","passActiveStep","useStyles","makeStyles","theme","root","width","button","marginRight","spacing","instructions","marginTop","marginBottom","HorizontalLinearStepper","classes","_React$useState","React","useState","_React$useState2","slicedToArray","activeStep","setActiveStep","_React$useState3","Set","_React$useState4","skipped","setSkipped","steps","isStepSkipped","has","Stepper","label","stepProps","labelProps","completed","Step","assign","StepLabel","length","Typography","Button","component","stepperchild_component_StepperChild","prevActiveStep","newSkipped","values","delete","App","react_router_dom","react_router","path","exact","StepperComponent","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a46739e6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\r\nimport jsonData from \"../../../assets/data/http/store-list.json\";\r\n\r\nexport default class SelectStoreComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = this.props.passState;\r\n        this.state.storesList = jsonData.storesList;\r\n        console.log(this.state.storesList);\r\n        this.handleSearchedStoreChange = this.handleSearchedStoreChange.bind(this);\r\n        console.log(this.state);      \r\n    }\r\n\r\n    displayCredentialScreen(item,index) {\r\n        console.log(this.state.onboardingRecordID);\r\n        this.setState((state) => ({\r\n            selectedStoreIndex: state.storesList.indexOf(item),\r\n            selectedStoreName: item.storeName\r\n          }));\r\n        // this.selectedStoreIndex = this.storeArr.indexOf(item);\r\n        setTimeout(() => {\r\n            console.log(this.state);\r\n            this.props.updateParentState(this.state.searchedStore,this.state.selectedStoreIndex,this.state.selectedStoreName,this.state.storeName,this.state.storePass,this.state.productList,this.state.productListExist);     \r\n            this.props.passHandleNext();\r\n        }, 200);\r\n    }\r\n\r\n    handleSearchedStoreChange(event) {\r\n        this.setState({searchedStore: event.target.value});\r\n    }\r\n\r\n    render() {\r\n        const { storesList } = this.state;\r\n        const { searchedStore } = this.state;\r\n        var filteredStoreList = storesList.filter(function (item) {\r\n            return item.storeName.toLowerCase().includes(searchedStore.toLowerCase());\r\n        });\r\n        return (\r\n            <div className=\"row content-wrapper\">\r\n                <div className=\"col-12\">                    \r\n                </div>\r\n                <div className=\"col-12 text-center\">\r\n                    <div className=\"stores-container\">\r\n                        <h2 className=\"onboarding-headings mt-3\">Select Your channel</h2>\r\n                        <input type=\"text\" placeholder=\"Search Sales Channel\" value={this.state.searchedStore} onChange={this.handleSearchedStoreChange}/>\r\n                        <div className=\"row\">\r\n\r\n                            {filteredStoreList.map((item,index) => (\r\n                                <div className=\"col-md-3 col-sm-12 mt-3 mb-3 store-list-container\" onClick={(e) => this.displayCredentialScreen(item, index, e)} key={index}>\r\n                                    {item.storeName}\r\n                                </div>\r\n                            ))}\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class StoreCredentialsComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);      \r\n        // this.state = {\r\n        //     storeName: '',\r\n        //     storePass: '',\r\n        //     productList: 'salesreceipt',\r\n        //     productListExist: ''\r\n        // };\r\n        this.state = this.props.passState;\r\n        console.log(this.state);       \r\n\r\n    \r\n        this.handleStoreNameChange = this.handleStoreNameChange.bind(this);\r\n        this.handleStorePassChange = this.handleStorePassChange.bind(this);        \r\n        this.handleProductListChange = this.handleProductListChange.bind(this); \r\n        this.handleProductListExistChange = this.handleProductListExistChange.bind(this); \r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.goToFirstScreen = this.goToFirstScreen.bind(this);\r\n      }\r\n   \r\n      handleStoreNameChange(event) {\r\n        this.setState({storeName: event.target.value});\r\n      }\r\n\r\n      handleStorePassChange(event) {\r\n        this.setState({storePass: event.target.value});\r\n      }  \r\n      \r\n      handleProductListChange(event) {\r\n        this.setState({productList: event.target.value});\r\n      }        \r\n\r\n      handleProductListExistChange(event) {\r\n        this.setState({productListExist: event.target.value});\r\n      }   \r\n\r\n      handleSubmit(event) {\r\n        // alert('A name was submitted: ' + this.state.storeName);\r\n        // alert('A name was submitted: ' + this.state.storePass);\r\n        // alert('A name was submitted: ' + this.state.productList);\r\n        // alert('A name was submitted: ' + this.state.productListExist);\r\n        this.setState((state) => ({\r\n            productList: state.productList,\r\n            productListExist: state.productListExist\r\n          }));        \r\n        this.props.updateParentState(this.state.searchedStore,this.state.selectedStoreIndex,this.state.selectedStoreName,this.state.storeName,this.state.storePass,this.state.productList,this.state.productListExist); \r\n        this.props.passHandleNext();\r\n        event.preventDefault();\r\n      }\r\n\r\n      goToFirstScreen() {\r\n        this.props.updateParentState(this.state.searchedStore,this.state.selectedStoreIndex,this.state.selectedStoreName,this.state.storeName,this.state.storePass,this.state.productList,this.state.productListExist);          \r\n        this.props.passHandleBack();\r\n      }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row content-wrapper\">\r\n                <div className=\"col-12\">\r\n                </div>\r\n            <div className=\"col-md-12\">\r\n                <h2 className=\"onboarding-headings mt-3 text-center\">Connect Your Sales Channel</h2>\r\n                <h3 className=\"onboarding-headings text-center\">Fill out the box below then click CONNECT for your store</h3>\r\n                <div className=\"col-md-12\">\r\n                    <form className=\"form-inline\" onSubmit={this.handleSubmit}>\r\n                        <div className=\"col-md-6\">\r\n                        <input type=\"text\" placeholder=\"Enter username for\" value={this.state.storeName || ''} onChange={this.handleStoreNameChange}/>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-6\">\r\n                        <input type=\"text\" placeholder=\"Enter password for\" value={this.state.storePass || ''} onChange={this.handleStorePassChange}/>\r\n                        </div>\r\n\r\n                        <div className=\"form-group col-md-6\">\r\n                            <label>\r\n                                Select product listing:\r\n                                <select value={this.state.productList} onChange={this.handleProductListChange}>\r\n                                    <option value=\"salesreceipt\">Sales Receipt</option>\r\n                                    <option value=\"invoice\">Invoice</option>\r\n                                </select>\r\n                            </label>                            \r\n                        </div>\r\n\r\n                        <div className=\"form-group col-md-6\">\r\n                            <label>Are products listed in QB</label>\r\n\r\n                                <div className=\"radio\">\r\n                                    <label>\r\n                                        <input type=\"radio\" name=\"productListExist\" value=\"yes\" onChange={this.handleProductListExistChange}/>\r\n                                        Yes\r\n                                    </label>\r\n                                </div>\r\n                                <div className=\"radio\">\r\n                                    <label>\r\n                                        <input type=\"radio\" name=\"productListExist\" value=\"no\" onChange={this.handleProductListExistChange} />\r\n                                        No\r\n                                    </label>\r\n                                </div>                           \r\n                        </div>\r\n\r\n                        <div className=\"col-md-12\">\r\n                        <button type=\"button\" className=\"ob-buttons ob-secondary-button\" onClick={this.goToFirstScreen}>Back</button>\r\n                        <button className=\"ob-buttons ob-primary-button\" type=\"submit\">Connect</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class StoreSuccessComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);      \r\n        this.state = this.props.passState;\r\n        console.log(this.state);     \r\n      }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row content-wrapper store-success-wrapper\">\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"store-success-info col-md-4 float-left\">\r\n                        <label>username : {this.state.storeName}</label><br />\r\n                        <label>password : {this.state.storePass}</label><br />\r\n                        <label>Are products listed : {this.state.productList}</label><br />\r\n                        <label>Selected product listing : {this.state.productListExist}</label><br />\r\n                    </div>\r\n                    <div className=\"col-md-8 float-left text-center\">\r\n                        <h3 className=\"onboarding-headings\"><span>Congrats!</span><br />You've successfully connected your store to\r\n                            Webgility</h3>\r\n                        <button className=\"ob-buttons ob-secondary-button\" onClick={this.props.passHandleBack}>Back</button>\r\n                        <button className=\"ob-buttons ob-primary-button\">Check your sales</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport SelectStoreComponent from \"../../pages/onboarding/selectstore.component\";\r\nimport StoreCredentialsComponent from \"../../pages/onboarding/storecredentials.component\";\r\nimport StoreSuccessComponent from \"../../pages/onboarding/storesuccess.component\";\r\nimport axios from 'axios';\r\n\r\nfunction getStepContent(step,handleNext,handleBack,state,updateParentState) {\r\n    switch (step) {\r\n      case 0:\r\n        return <SelectStoreComponent passHandleNext={handleNext} passState={state} updateParentState={updateParentState}/>;\r\n      case 1:\r\n        return <StoreCredentialsComponent passHandleBack={handleBack} passHandleNext={handleNext} passState={state} updateParentState={updateParentState}/>;\r\n      case 2:\r\n        return <StoreSuccessComponent passHandleBack={handleBack} passState={state} updateParentState={updateParentState}/>;\r\n      default:\r\n        return 'Unknown step';\r\n    }\r\n}\r\n\r\nexport default class StepperChild extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          searchedStore: '',  \r\n          selectedStoreIndex: '',\r\n          selectedStoreName: '',\r\n          storeName: '',\r\n          storePass: '',\r\n          productList: 'salesreceipt',\r\n          productListExist: ''          \r\n        };\r\n        console.log(this.state);    \r\n        this.updateParentState = this.updateParentState.bind(this);  \r\n    }\r\n\r\n    componentDidMount() {\r\n      console.log('component mount stepper');\r\n      axios.get(`http://localhost:4000/obdatas`)\r\n      .then(res => {\r\n        const data = res.data[0];\r\n        if(data) {\r\n          this.setState({\r\n            onboardingRecordID: data._id,\r\n            searchedStore: data.searchedStore,  \r\n            selectedStoreIndex: data.selectedStoreIndex,\r\n            selectedStoreName: data.selectedStoreName,\r\n            storeName: data.storeName,\r\n            storePass: data.storePass,\r\n            productList: data.productList,\r\n            productListExist: data.productListExist\r\n          })\r\n        } else {\r\n          console.log('inside else');\r\n          axios.post(`http://localhost:4000/obdatas/add`, this.state)\r\n          .then(res => {\r\n            console.log(res);\r\n            console.log(res.data);\r\n            axios.get(`http://localhost:4000/obdatas`)\r\n            .then(res => {\r\n              console.log(res);\r\n              console.log(res.data[0]._id);\r\n              this.setState({\r\n                onboardingRecordID: res.data[0]._id\r\n              })              \r\n            })                \r\n          })          \r\n        }\r\n        console.log(this.state);\r\n      })\r\n    }\r\n\r\n\r\n    updateParentState(searchedStore, selectedStoreIndex, selectedStoreName, storeName, storePass, productList, productListExist) {\r\n      this.setState({\r\n        searchedStore: searchedStore,  \r\n        selectedStoreIndex: selectedStoreIndex,\r\n        selectedStoreName: selectedStoreName,\r\n        storeName: storeName,\r\n        storePass: storePass,\r\n        productList: productList,\r\n        productListExist: productListExist\r\n      }, () => {\r\n        axios.post(`http://localhost:4000/obdatas/update/${this.state.onboardingRecordID}`, this.state)\r\n        .then(res => {\r\n          console.log(res);\r\n          console.log(res.data);            \r\n        })  \r\n      });      \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            { this.state && this.state.onboardingRecordID && <div>             \r\n                {getStepContent(this.props.passActiveStep,this.props.passHandleNext,this.props.passHandleBack,this.state, this.updateParentState)}\r\n                </div>\r\n            }\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SelectStoreComponent from \"../../pages/onboarding/selectstore.component\";\r\nimport StoreCredentialsComponent from \"../../pages/onboarding/storecredentials.component\";\r\nimport StoreSuccessComponent from \"../../pages/onboarding/storesuccess.component\";\r\nimport StepperChild from \"./stepperchild.component\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '90%',\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return ['Select Sales Channel', 'Store Credentials', 'Successfully Done'];\r\n}\r\n\r\n// function getStepContent(step,handleNext,handleBack) {\r\n//   switch (step) {\r\n//     case 0:\r\n//       return <SelectStoreComponent passHandleNext={handleNext}/>;\r\n//     case 1:\r\n//       return <StoreCredentialsComponent passHandleBack={handleBack} passHandleNext={handleNext}/>;\r\n//     case 2:\r\n//       return <StoreSuccessComponent passHandleBack={handleBack}/>;\r\n//     default:\r\n//       return 'Unknown step';\r\n//   }\r\n// }\r\n\r\nexport default function HorizontalLinearStepper() {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const [skipped, setSkipped] = React.useState(new Set());\r\n  const steps = getSteps();\r\n\r\n  function isStepOptional(step) {\r\n    return false;\r\n  }\r\n\r\n  function isStepSkipped(step) {\r\n    return skipped.has(step);\r\n  }\r\n\r\n  function handleNext() {\r\n    let newSkipped = skipped;\r\n    if (isStepSkipped(activeStep)) {\r\n      newSkipped = new Set(newSkipped.values());\r\n      newSkipped.delete(activeStep);\r\n    }\r\n\r\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\r\n    setSkipped(newSkipped);\r\n  }\r\n\r\n  function handleBack() {\r\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\r\n  }\r\n\r\n  function handleSkip() {\r\n    if (!isStepOptional(activeStep)) {\r\n      // You probably want to guard against something like this,\r\n      // it should never occur unless someone's actively trying to break something.\r\n      throw new Error(\"You can't skip a step that isn't optional.\");\r\n    }\r\n\r\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\r\n    setSkipped(prevSkipped => {\r\n      const newSkipped = new Set(prevSkipped.values());\r\n      newSkipped.add(activeStep);\r\n      return newSkipped;\r\n    });\r\n  }\r\n\r\n  function handleReset() {\r\n    setActiveStep(0);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Stepper activeStep={activeStep}>\r\n        {steps.map((label, index) => {\r\n          const stepProps = {};\r\n          const labelProps = {};\r\n          if (isStepOptional(index)) {\r\n            labelProps.optional = <Typography variant=\"caption\">Optional</Typography>;\r\n          }\r\n          if (isStepSkipped(index)) {\r\n            stepProps.completed = false;\r\n          }\r\n          return (\r\n            <Step key={label} {...stepProps}>\r\n              <StepLabel {...labelProps}>{label}</StepLabel>\r\n            </Step>\r\n          );\r\n        })}\r\n      </Stepper>\r\n      <div>\r\n        {activeStep === steps.length ? (\r\n          <div>\r\n            <Typography className={classes.instructions}>\r\n              All steps completed - you&apos;re finished\r\n            </Typography>\r\n            <Button onClick={handleReset} className={classes.button}>\r\n              Reset\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <Typography component={'span'} className={classes.instructions}>\r\n              <StepperChild passActiveStep={activeStep} passHandleBack={handleBack} passHandleNext={handleNext}/>\r\n            </Typography>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport './App.css';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport SelectStoreComponent from \"./components/pages/onboarding/selectstore.component\";\nimport StoreCredentialsComponent from \"./components/pages/onboarding/storecredentials.component\";\nimport StoreSuccessComponent from \"./components/pages/onboarding/storesuccess.component\";\nimport StepperComponent from \"./components/common/stepper/stepper.component\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"container\">\n        <Route path=\"/\" exact component={StepperComponent} />\n      </div>\n  </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}